#!/bin/bash

Usage () { cat 1>&2 <<EOF
Usage: $0 zip_or_rar_or_dir [...]
EOF
}

if [ $# -lt 1 ] ; then
  Usage
  exit 2
fi

plerf () {
  shopt -s nullglob
  echo '<link rel="stylesheet" href="_.css" />' > "$1".html
  python3 _plerf.py "$1"/*.png "$1"/*.jpg >> "$1".html
}

set -e

for archive; do
  case "$archive" in
    *.rar)
      outdir=$( basename "$archive" .rar )
      if ! [ -d "$outdir" ] ; then
        unrar x -- "$archive"
      fi
      plerf "$outdir"
      ;;
    *.zip)
      base=$( basename "$archive" .zip )
      outdirs=$( unzip -l "$archive" \
        | sed -n -e 's,^[ ]*[0-9]*  [0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]   ,,p' \
        | sed -e 's,[^/]*$,/,' \
        | uniq )
      outdir=${outdirs%//}
      if [ "$outdirs" = / ] ; then
        outdir=${base}
      elif [ "$( echo " $outdirs" | wc -l )" -gt 1 ] ; then
        outdir=${base}
      elif [ "$outdirs" = "$outdir" ] ; then
        echo "Unexpected condition for: $archive"
        declare -p outdir outdirs
        exit 3
      else
        : Archive contains one top-level folder
      fi
      if ! [ -d "$outdir" ] ; then
        open -W -n "$archive"
      fi
      plerf "$outdir"
      ;;
    *)
      if [ -d "$archive" ] ; then
        plerf "$archive"
      else
        Usage
        exit 1
      fi
      ;;
  esac
done
